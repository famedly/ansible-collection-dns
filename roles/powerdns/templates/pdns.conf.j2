# Autogenerated configuration file template
#################################
# allow-axfr-ips	Allow zonetransfers only to these subnets
#
allow-axfr-ips={{ powerdns_config_allox_axfr_ips | join(',') }}

#################################
# allow-recursion	List of subnets that are allowed to recurse
#
# allow-recursion=0.0.0.0/0

#################################
# allow-recursion-override	Set this so that local data fully overrides the recursor
#
# allow-recursion-override=no

#################################
# cache-ttl	Seconds to store packets in the PacketCache
#
cache-ttl=60

#################################
# chroot	If set, chroot to this directory for more security
#
{% if powerdns_config_chroot %}
chroot={{ powerdns_config_chroot }}
{% endif %}

#################################
# config-dir	Location of configuration directory (pdns.conf)
#
config-dir={{ powerdns_config_config_dir }}

#################################
# config-name	Name of this virtual configuration - will rename the binary image
#
# config-name=

#################################
# control-console	Debugging switch - don't use
#
# control-console=no

#################################
# daemon	Operate as a daemon
#
daemon={{ 'yes' if powerdns_config_daemon else 'no' }}

#################################
# default-ttl	Seconds a result is valid if not set otherwise
#
default-ttl={{ powerdns_config_default_ttl }}

#################################
# disable-axfr	Disable zonetransfers but do allow TCP queries
#
# disable-axfr=no

#################################
# disable-tcp	Do not listen to TCP queries
#
# disable-tcp=no

#################################
# distributor-threads	Default number of Distributor (backend) threads to start
#
distributor-threads={{ powerdns_config_distributor_threads | int }}

#################################
# dnsupdate	A setting to enable/disable DNS update support completely
#
dnsupdate={{ 'yes' if powerdns_config_dnsupdate else 'no' }}

#################################
# dnsupdate	A setting to enable/disable DNS update support completely
#
allow-dnsupdate-from={{  powerdns_config_allow_dnsupdate_from | join(', ') }}

#################################
# dnsupdate	A setting to enable/disable DNS update support completely
#
{% if powerdns_config_lua_dnsupdate_policy_script_path %}
lua-dnsupdate-policy-script={{ powerdns_config_lua_dnsupdate_policy_script_path }}
{% endif %}

#################################
# do-ipv6-additional-processing	Do AAAA additional processing
#
# do-ipv6-additional-processing=no

#################################
# fancy-records	Process URL and MBOXFW records
#
# fancy-records=no

#################################
# guardian	Run within a guardian process
#
guardian={{ 'yes' if powerdns_config_guardian else 'no' }}

#################################
# launch	Which backends to launch and order to query them in
#
{% if powerdns_default_backend == 'postgres' %}
launch=gpgsql
{% endif %}

#################################
# lazy-recursion	Only recurse if question cannot be answered locally
#
# lazy-recursion=yes

#################################
# load-modules	Load this module - supply absolute or relative path
#
# load-modules=

#################################
# local-address	Local IP addresses to which we bind
#
local-address={{ powerdns_config_local_address | join(', ') }}

#################################
# local-ipv6	Local IP address to which we bind
#
# local-ipv6=

#################################
# local-port	The port on which we listen
#
local-port={{ powerdns_config_local_port | int }}

#################################
# log-dns-details	If PDNS should log DNS non-erroneous details
#
# log-dns-details=

#################################
# log-failed-updates	If PDNS should log failed update requests
#
# log-failed-updates=

#################################
# logfile	Logfile to use (Windows only)
#
# logfile=pdns.log

#################################
# logging-facility	Log under a specific facility
#
# logging-facility=

#################################
# loglevel	Amount of logging. Higher is more. Do not set below 3
#
loglevel={{ powerdns_config_loglevel | int }}

#################################
# master	Act as a master
#
#master=no
primary={{ 'yes' if powerdns_config_operation_mode == 'primary' else 'no' }}

#################################
# max-queue-length	Maximum queuelength before considering situation lost
#
# max-queue-length=5000

#################################
# max-tcp-connections	Maximum number of TCP connections
#
# max-tcp-connections=10

#################################
# module-dir	Default directory for modules
#
module-dir=/usr/lib/pdns/pdns

#################################
# negquery-cache-ttl	Seconds to store packets in the PacketCache
#
negquery-cache-ttl=60

#################################
# no-shuffle	Set this to prevent random shuffling of answers - for regression testing
#
# no-shuffle=off

#################################
# out-of-zone-additional-processing	Do out of zone additional processing
#
# out-of-zone-additional-processing=yes

#################################
# pipebackend-abi-version	Version of the pipe backend ABI
#
# pipebackend-abi-version=1

#################################
# query-cache-ttl	Seconds to store packets in the PacketCache
#
# query-cache-ttl=20

#################################
# query-local-address	Source IP address for sending queries
#
{% if powerdns_config_query_local_address %}
query-local-address={{ powerdns_config_query_local_address }}
{% endif %}

#################################
# query-logging	Hint backends that queries should be logged
#
# query-logging=no

#################################
# queue-limit	Maximum number of milliseconds to queue a query
#
# queue-limit=1500

#################################
# recursive-cache-ttl	Seconds to store packets in the PacketCache
#
# recursive-cache-ttl=10

#################################
# recursor	If recursion is desired, IP address of a recursing nameserver
#
# recursor=no

#################################
# send-root-referral	Send out old-fashioned root-referral instead of ServFail in case of no authority
#
# send-root-referral=no

#################################
# send-signed-notify	If yes, outgoing NOTIFYs will be signed if a TSIG key is configured for the zone
#
send-signed-notify={{ 'yes' if powerdns_config_send_signed_notify else 'no' }}

#################################
# setgid	If set, change group id to this gid for more security
#
setgid={{ powerdns_config_setgid }}

#################################
# setuid	If set, change user id to this uid for more security
#
setuid={{ powerdns_config_setuid }}

#################################
# skip-cname	Do not perform CNAME indirection for each query
#
# skip-cname=no

#################################
# slave	Act as a slave
#
#slave=no
secondary={{ 'no' if powerdns_config_operation_mode == 'primary' else 'yes' }}

autosecondary={{ 'yes' if powerdns_config_autosecondary else 'no' }}

#################################
# slave-cycle-interval	Reschedule failed SOA serial checks once every .. seconds
#
# slave-cycle-interval=60

#################################
# smtpredirector	Our smtpredir MX host
#
# smtpredirector=a.misconfigured.powerdns.smtp.server

#################################
# default-soa-content	This value is used when a zone is created without providing a SOA record. @ is replaced by the zone name.
#
default-soa-content={{ powerdns_config_default_soa_name }} admin.@ 0 {{ powerdns_config_default_soa_refresh_interval_seconds }} {{ powerdns_config_default_soa_retry_interval_seconds }} {{ powerdns_config_default_soa_expire_seconds }} {{ powerdns_config_default_soa_minimum_ttl }}

#################################
# soa-serial-offset	Make sure that no SOA serial is less than this number
#
#{% if powerdns_config_default_soa_serial_offset %}
#soa-serial-offset={{ powerdns_config_default_soa_serial_offset }}
#{% endif %}

#################################
# socket-dir	Where the controlsocket will live
#
socket-dir={{ powerdns_config_socket_dir }}

#################################
# strict-rfc-axfrs	Perform strictly rfc compliant axfrs (very slow)
#
# strict-rfc-axfrs=no

#################################
# trusted-notification-proxy	IP address of incoming notification proxy
#
# trusted-notification-proxy=

#################################
# urlredirector	Where we send hosts to that need to be url redirected
#
# urlredirector=127.0.0.1

#################################
# version-string	PowerDNS version in packets - full, anonymous, powerdns or custom
#
{% if powerdns_config_version_string %}
version-string={{ powerdns_config_version_string }}
{% endif %}

#################################
# webserver	Start a webserver for monitoring
#
webserver={{ 'yes' if powerdns_config_webserver else 'no' }}

{% if powerdns_config_webserver %}
#################################
# webserver-address	IP Address of webserver to listen on
#
webserver-address={{ powerdns_config_webserver_address }}

#################################
# webserver-allow-from  These IPs and subnets are allowed to access the webserver. Note that specifying an IP address without a netmask uses an implicit netmask of /32 or /128.
#
webserver-allow-from={{ powerdns_config_webserver_allow_from }}

#################################
# webserver-password	Password required for accessing the webserver
#
{% if powerdns_config_webserver_password %}
webserver-password={{ powerdns_config_webserver_password }}
{% endif %}

api={{ 'yes' if powerdns_config_api|bool else 'no' }}
api-key={{ powerdns_config_api_key }}

#################################
# webserver-port	Port of webserver to listen on
#
webserver-port={{ powerdns_config_webserver_port }}

#################################
# webserver-print-arguments	If the webserver should print arguments
#
# webserver-print-arguments=no
{% endif %}

#################################
# wildcard-url	Process URL and MBOXFW records
#
# wildcard-url=no

#################################
# geoip-database-files Comma, tab or space separated list of files to open
#

#################################
# geoip-database-cache Specifies the kind of caching that is done on the database
#

#################################
# geoip-zones-file Specifies the full path of the zone configuration file to use
#

#################################
# geoip-dnssec-keydir Specifies the full path of a directory that will contain DNSSEC keys
#
{% if powerdns_default_backend == 'postgres' %}
gpgsql-host={{ powerdns_backend_postgres_host }}
{% if powerdns_backend_postgres_port %}
gpgsql-port={{ powerdns_backend_postgres_port }}
{% endif %}
gpgsql-dbname={{ powerdns_backend_postgres_dbname }}
gpgsql-user={{ powerdns_backend_postgres_user }}
{% if powerdns_backend_postgres_password %}
gpgsql-password={{ powerdns_backend_postgres_password }}
{% endif %}
gpgsql-dnssec={{ 'yes' if powerdns_backend_postgres_dnssec else 'no' }}
{% endif %}
